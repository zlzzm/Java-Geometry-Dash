public class Enemy {
  int numEnemies = 5;
  float[] enemyX;
  float[] enemyY;
  int[] spawnDelay;
  int[] spawnTimer;
  boolean[] scored;
  float objectSpeed;

  float playerX;
  float playerY;

  public Enemy(float objectSpeed) {
    this.objectSpeed = objectSpeed;

    enemyX = new float[numEnemies];
    enemyY = new float[numEnemies];
    spawnDelay = new int[numEnemies];
    spawnTimer = new int[numEnemies];
    scored = new boolean[numEnemies];

    for (int i = 0; i < numEnemies; i++) {
      enemyX[i] = width + int(random(200, 600));
      enemyY[i] = 900;
      spawnDelay[i] = int(random(30, 120));
      spawnTimer[i] = spawnDelay[i];
      scored[i] = false;
    }
  }

  public void updatePlayerPosition(float px, float py) {
    playerX = px;
    playerY = py;
  }

  public void show() {
    for (int i = 0; i < numEnemies; i++) {
      if (spawnTimer[i] <= 0) {
        enemyX[i] -= objectSpeed;
      } else {
        spawnTimer[i]--;
      }

      if (enemyX[i] < -50) {
        enemyX[i] = width + int(random(200, 600));
        spawnTimer[i] = int(random(30, 120));
        scored[i] = false;
      }

      if (enemyX[i] < playerX + 50 &&
        enemyX[i] + 50 > playerX &&
        enemyY[i] == playerY) {
        lose();
      }

      fill(255, 0, 0);
      triangle(enemyX[i], 1000, enemyX[i] + 25, 950, enemyX[i] + 50, 1000);
    }
  }
}
