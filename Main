float objectSpeed = 10;
int score = 0;
boolean waitingForGameToStart;

Player player;
Enemy enemies;
Orb orb;
Platforms platform;

void setup() {
  size(1500, 1000);
  waitingForGameToStart = true;

  player = new Player();
  player.initialize();

  enemies = new Enemy(objectSpeed);
  orb = new Orb(objectSpeed);
  platform = new Platforms(objectSpeed, player, enemies, orb);
}

void draw() {
  background(0);

  if (waitingForGameToStart) {
    fill(255);
    textSize(50);
    textAlign(CENTER, CENTER);
    text("Click to start", width / 2, height / 2);
  } else {
    platform.show();
    platform.playerCheck();


    player.show();

    enemies.updatePlayerPosition(player.playerX, player.playerY);
    enemies.show();

    orb.updatePlayerPos(player.playerX, player.playerY);
    orb.show();

    for (int i = 0; i < orb.numOrb; i++) {
      float dx = orb.orbX[i] - (player.playerX + 25);
      float dy = orb.orbY[i] - (player.playerY + 25);
      float distance = sqrt(dx*dx + dy*dy);

      if (distance < 30) {
        orb.orbBoost(i, player);
      }
    }

    for (int i = 0; i < enemies.numEnemies; i++) {
      if (!enemies.scored[i] && enemies.enemyX[i] < player.playerX) {
        score++;
        enemies.scored[i] = true;
      }
    }

    fill(255, 0, 0);
    textSize(100);
    text(score, 100, 50);
  }
}

void keyPressed() {
  if (waitingForGameToStart) {
    return;
  } else {
    if (key == ' ') {
      if (!player.jumping) {
        player.jump();
      } else {
        player.doubleJump();
      }
    }
  }
}

void mouseClicked() {
  if (waitingForGameToStart) {
    waitingForGameToStart = false;
  } else {
    player.jump();
  }
}

void lose() {
  background(0);
  textSize(100);
  fill(255);
  textAlign(CENTER, CENTER);
  text("You lose!", width / 2, height / 2);
  noLoop();
}
