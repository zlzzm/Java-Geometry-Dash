Player player;
Enemy enemies;
Orb orb;
Platforms platform;
float objectSpeed = 10;
int score = 0;
boolean waitingForGameToStart;

void setup() {
  waitingForGameToStart = true;
  size(900, 500);
  player = new Player();
  player.initialize();

  enemies = new Enemy(objectSpeed);
  orb = new Orb(objectSpeed);  // âœ… Add this line
}

void draw() {
  background(0);  // clear background first

  if (waitingForGameToStart) {
    fill(255);
    textSize(50);
    textAlign(250, 250);
    text("Press Key To Start", 250, 250);
  } else {
    // Your game logic here
    for (int i = 0; i < enemies.numEnemies; i++) {
      if (!enemies.scored[i] && enemies.enemyX[i] < player.playerX) {
        score += 1;
        enemies.scored[i] = true;  // mark as scored so it doesn't score again
      }
    }

    for (int a = 0; a < orb.numOrb; a++) {
      float dx = orb.orbX[a] - (player.playerX + 25);
      float dy = orb.orbY[a] - (player.playerY + 25);
      float distance = sqrt(dx*dx + dy*dy);

      if (distance < 30) {
        orb.orbBoost(a);
      }
    }

    player.show();
    enemies.updatePlayerPosition(player.playerX, player.playerY);
    enemies.show();
    fill(0);
    orb.show();
    orb.updatePlayerPos(player.playerX, player.playerY);

    fill(255, 0, 0);
    textSize(200);
    text(score, 10, 200);
  }
}

void keyPressed() {
  if (waitingForGameToStart == true)
  {
    waitingForGameToStart = false;
  } else {
    if (key == ' ') {
      if (!player.jumping) {
        player.jump();        // First jump if not already jumping
      } else {
        player.doubleJump();  // Double jump if already in the air
      }
    }
  }
}
void mouseClicked() {
  player.jump();
}

void lose() {
  background(0);
  background(0);
  textSize(200);
  fill(255);
  text("You lose", 100, 200);
  noLoop();
}
